.data
prompt:     .asciiz "Ingrese el número de filas: "
menu_prompt:.asciiz "\nMenu:\n1. Generar\n2. Imprimir\n3. Salir\nSeleccione opcion: "
space:      .asciiz " "
newline:    .asciiz "\n"
no_rows:    .asciiz "Primero debe generar el triangulo!\n"

row_ptrs:   .space 400    # Almacena hasta 100 filas (100*4 bytes)
num_rows:   .word 0       # Número de filas generadas

.text
.globl main

main:
menu:
    # Mostrar menú
    li $v0, 4
    la $a0, menu_prompt
    syscall

    # Leer opción
    li $v0, 5
    syscall
    move $t0, $v0

    # Evaluar opción
    beq $t0, 1, generar
    beq $t0, 2, imprimir
    beq $t0, 3, salir
    j menu

generar:
    # Pedir número de filas
    li $v0, 4
    la $a0, prompt
    syscall
    li $v0, 5
    syscall
    sw $v0, num_rows
    
    # Limpiar registros
    li $t0, 0          # i = 0
    lw $t1, num_rows   # n

loop_i:
    bge $t0, $t1, menu
    
    # Calcular tamaño de fila (i+1)*4
    addi $a0, $t0, 1
    sll $a0, $a0, 2
    li $v0, 9
    syscall
    
    # Guardar dirección en row_ptrs
    la $t2, row_ptrs
    sll $t3, $t0, 2
    add $t2, $t2, $t3
    sw $v0, 0($t2)
    
    # Generar valores de la fila
    li $t2, 1          # val = 1
    sw $t2, 0($v0)     # Primer elemento
    
    li $t3, 1          # k = 1

loop_k:
    bgt $t3, $t0, next_i
    
    # Calcular siguiente valor
    sub $t4, $t0, $t3
    addi $t4, $t4, 1
    mul $t2, $t2, $t4
    div $t2, $t3
    mflo $t2
    
    # Guardar en memoria
    sll $t4, $t3, 2
    add $t4, $v0, $t4
    sw $t2, 0($t4)
    
    addi $t3, $t3, 1   # Corregido
    j loop_k

next_i:
    addi $t0, $t0, 1   # Corregido
    j loop_i

imprimir:
    lw $t0, num_rows
    beqz $t0, no_rows_error
    
    li $t1, 0          # i = 0

print_loop_i:
    bge $t1, $t0, menu
    
    # Obtener dirección de la fila
    la $t2, row_ptrs
    sll $t3, $t1, 2
    add $t2, $t2, $t3
    lw $t4, 0($t2)     # Dirección de la fila
    
    li $t5, 0          # j = 0

print_loop_j:
    bgt $t5, $t1, print_newline
    
    # Imprimir número
    sll $t6, $t5, 2
    add $t6, $t4, $t6
    lw $a0, 0($t6)
    li $v0, 1
    syscall
    
    # Imprimir espacio
    li $v0, 4
    la $a0, space
    syscall
    
    addi $t5, $t5, 1   # Corregido
    j print_loop_j

print_newline:
    # Imprimir salto de línea
    li $v0, 4
    la $a0, newline
    syscall
    
    addi $t1, $t1, 1
    j print_loop_i

no_rows_error:
    li $v0, 4
    la $a0, no_rows
    syscall
    j menu

salir:
    li $v0, 10
    syscall
